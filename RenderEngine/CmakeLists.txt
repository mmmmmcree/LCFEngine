project(RenderEngine)
set(Vulkan_ROOT_DIR $ENV{VULKAN_SDK})  
set(Vulkan_INCLUDE_DIR "${Vulkan_ROOT_DIR}/include")
set(Vulkan_LIBRARY "${Vulkan_ROOT_DIR}/lib")  
file(GLOB_RECURSE HEADERS "include/*.h")
file(GLOB_RECURSE SOURCES "src/*.cpp") 
  
add_library(${PROJECT_NAME} STATIC
    ${HEADERS}
    ${SOURCES}
) 
  
find_package(Vulkan REQUIRED)
find_package(unofficial-shaderc CONFIG REQUIRED)
find_package(spirv_cross_core CONFIG REQUIRED)
find_package(spirv_cross_glsl CONFIG REQUIRED)
find_package(spirv_cross_cpp CONFIG REQUIRED)
find_package(VulkanMemoryAllocator CONFIG REQUIRED)
find_package(Boost CONFIG REQUIRED)
    
file(GLOB_RECURSE INCLUDE_DIRS CONFIGURE_DEPENDS LIST_DIRECTORIES true "${CMAKE_CURRENT_SOURCE_DIR}/include/*")
set(DIRS_ONLY "")  
foreach(ITEM ${INCLUDE_DIRS})
  if(IS_DIRECTORY ${ITEM})
    list(APPEND DIRS_ONLY ${ITEM})
  endif()    
endforeach()
include_directories( 
  ${CMAKE_CURRENT_SOURCE_DIR}/include 
  ${DIRS_ONLY}
)     

target_include_directories(${PROJECT_NAME}
    PUBLIC
        $<INSTALL_INTERFACE:include>
        $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
    PRIVATE 
        ${Vulkan_INCLUDE_DIR}
        ${VulkanMemoryAllocator_INCLUDE_DIRS}
        ${CMAKE_CURRENT_SOURCE_DIR}/src
)        
link_directories(${Vulkan_LIBRARY})
target_link_libraries(${PROJECT_NAME}
    PUBLIC  
        math
        utilities 
        WindowSystem 
        core
        Boost::headers  
    PRIVATE
        ${Vulkan_LIBRARY}/vulkan-1.lib
        unofficial::shaderc::shaderc
        spirv-cross-core spirv-cross-glsl spirv-cross-cpp
        GPUOpen::VulkanMemoryAllocator
)
 